-- Organizations and cooperations --

CREATE TABLE organization
(
    id          BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 3000000 INCREMENT BY 1),
    public_id   TEXT UNIQUE NOT NULL DEFAULT nanoid(),
    business_id TEXT UNIQUE NOT NULL,
    name        TEXT
);

CREATE TYPE cooperation_type AS ENUM ('authority-provider');

CREATE TABLE cooperation
(
    type         cooperation_type DEFAULT 'authority-provider',
    partner_a_id BIGINT NOT NULL,
    partner_b_id BIGINT NOT NULL,
    UNIQUE (type, partner_a_id, partner_b_id),
    CONSTRAINT fk_collaboration_partner_a_id FOREIGN KEY (partner_a_id) REFERENCES organization (id) ON DELETE CASCADE,
    CONSTRAINT fk_collaboration_partner_b_id FOREIGN KEY (partner_b_id) REFERENCES organization (id) ON DELETE CASCADE
);

-- Queue Handler --

CREATE TABLE entry
(
    id          BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1000000 INCREMENT BY 1),
    public_id   TEXT UNIQUE NOT NULL DEFAULT nanoid(),
    "format"    TEXT        NOT NULL,
    url         TEXT        NOT NULL,
    business_id TEXT        NOT NULL,
    etag        TEXT,
    metadata    JSONB,
    created     TIMESTAMP(3) NOT NULL DEFAULT NOW(),
    started     TIMESTAMP(3),
    updated     TIMESTAMP(3),
    completed   TIMESTAMP(3),
    CONSTRAINT fk_organization_business_id FOREIGN KEY (business_id) REFERENCES organization (business_id) ON DELETE CASCADE
);

CREATE TABLE phase
(
    id        BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1100000 INCREMENT BY 1),
    entry_id  BIGINT       NOT NULL,
    "name"    TEXT         NOT NULL,
    priority  INT          NOT NULL,
    started   TIMESTAMP(3) NOT NULL DEFAULT NOW(),
    updated   TIMESTAMP(3),
    completed TIMESTAMP(3),
    CONSTRAINT fk_phase_entry_entry_id FOREIGN KEY (entry_id) REFERENCES entry (id) ON DELETE CASCADE,
    UNIQUE (entry_id, name)
);

CREATE INDEX idx_phase_name ON phase
    (
     name
        );

CREATE TABLE validation_input
(
    id       BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1200000 INCREMENT BY 1),
    entry_id BIGINT NOT NULL,
    name     TEXT NOT NULL,
    config   JSONB,
    CONSTRAINT fk_validation_input_entry_entry_id FOREIGN KEY (entry_id) REFERENCES entry (id) ON DELETE CASCADE
);

CREATE TABLE conversion_input
(
    id       BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1300000 INCREMENT BY 1),
    entry_id BIGINT NOT NULL,
    name     TEXT NOT NULL,
    config   JSONB,
    CONSTRAINT fk_conversion_input_entry_entry_id FOREIGN KEY (entry_id) REFERENCES entry (id) ON DELETE CASCADE
);

CREATE TABLE generated_file
(
    id       BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1400000 INCREMENT BY 1),
    entry_id BIGINT NOT NULL,
    path     TEXT   NOT NULL,
    CONSTRAINT fk_generated_file_entry_entry_id FOREIGN KEY (entry_id) REFERENCES entry (id) ON DELETE CASCADE
);

-- Rulesets --

CREATE TYPE ruleset_category AS ENUM ('generic', 'specific');

CREATE TABLE ruleset
(
    id               BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 2000000 INCREMENT BY 1),
    public_id        TEXT UNIQUE                 NOT NULL DEFAULT nanoid(),
    owner_id         BIGINT                      NOT NULL,
    category         ruleset_category            NOT NULL,
    identifying_name TEXT UNIQUE                 NOT NULL,
    description      TEXT                        NOT NULL,
    "type"           TEXT                        NOT NULL,
    CONSTRAINT fk_ruleset_owner_id FOREIGN KEY (owner_id) REFERENCES organization (id) ON DELETE CASCADE
);

CREATE INDEX idx_ruleset_identifying_name ON ruleset
(
    identifying_name
);

-- Error handling --

CREATE TABLE error
(
    id         BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 4000000 INCREMENT BY 1),
    public_id  TEXT UNIQUE NOT NULL DEFAULT nanoid(),
    entry_id   BIGINT      NOT NULL,
    phase_id   BIGINT      NOT NULL,
    ruleset_id BIGINT      NOT NULL,
    "message"  TEXT,
    raw        BYTEA,
    CONSTRAINT fk_error_entry_entry_id FOREIGN KEY (entry_id) REFERENCES entry (id) ON DELETE CASCADE,
    CONSTRAINT fk_error_phase_phase_id FOREIGN KEY (phase_id) REFERENCES phase (id) ON DELETE CASCADE,
    CONSTRAINT fk_error_ruleset_id FOREIGN KEY (ruleset_id) REFERENCES ruleset (id) ON DELETE CASCADE
);
